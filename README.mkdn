<h1> Octopus  Replication Example </h1>

<p> This is a sample rails application demonstrating replication features in octopus. The application have 1 master, (specified in database.yml) and 4 slaves (specified in shards.yml).</p>

<h2>Feature list: </h2>

<p> All writes will be sent to master, and the read queries will be sent to the slaves. unless you have a transaction, so , all queries will be sent to master.</p>
<p> The application have two different models: Client and User. User is a replicated model, and Client isn't replicated. So, when you create a new User, you will see a exception, because you don't have configuration for replication and Rails tries to read the user from a slave database, and the write query have been sent to master (Default behaviour when using replication). When you create a new client, everything should works fine, it will read and write in the master database. </p>

<h2> Setup: </h2>
<p> You will need two commands to setup the application:</p>
<pre> rake db:octopus && rake db:migrate </pre>

<p>More info could be found at <a href="http://wiki.github.com/tchandy/octopus/">Octopus Wiki</a> </p>

<h2>Thanks</h2>

This project is sponsored by the <a href="http://www.rubysoc.org">Ruby Summer of Code</a>,
and my mentors <a href="http://github.com/mperham">Mike Perham</a> and <a href="http://github.com/amitagarwal">Amit Agarwal</a>.

<h2>Copyright</h2>

Copyright (c) 2010 Thiago Pradi, released under the MIT license.